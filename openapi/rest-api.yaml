# Website used to generate these Tag-Comments: http://patorjk.com/software/taag/#f=Big
openapi: "3.0.3"
info:
  title: "evcc REST-API"
  description: "@naltatis"
  version: latest
servers:
  - url: https://demo.evcc.io/api
tags:
  - name: Auth
    description: "@naltatis"
  - name: State
    description: "@naltatis"
  - name: Site
    description: "@naltatis"
  - name: Loadpoints
    description: "@naltatis"
  - name: Vehicles
    description: "@naltatis"
  - name: Config
    description: "@naltatis"
  - name: System
    description: "@naltatis"
paths:
  #   _______               _____ _ _
  #  |__   __|         _   / ____(_) |
  #     | | __ _  __ _(_) | (___  _| |_ ___
  #     | |/ _` |/ _` |    \___ \| | __/ _ \
  #     | | (_| | (_| |_   ____) | | ||  __/
  #     |_|\__,_|\__, (_) |_____/|_|\__\___|
  #               __/ |
  #              |___/
  /health:
    get:
      summary: Health check
      description: "@naltatis"
      tags:
        - Site
      responses:
        200:
          description: Success ðŸ¥³
          content:
            text/plain:
              schema:
                type: string
                enum: [OK]
        500:
          description: "@naltatis"
  /batterydischargecontrol/{enable}:
    post:
      summary: Control battery-discharge
      description: "[See documentation](/en/docs/features/battery#discharge-lock-during-fast-charging)"
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/enable"
      responses:
        200:
          $ref: "#/components/responses/BooleanResult"
  /batterygridchargelimit/{cost}:
    post:
      summary: Set battery grid charge limit
      description: "[See documentation](/en/docs/features/battery#charging-the-battery-from-the-grid)"
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/costLimit"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /batterygridchargelimit:
    delete:
      summary: Remove battery grid charge limit
      description: "[See documentation](/en/docs/features/battery#charging-the-battery-from-the-grid)"
      tags:
        - Site
      responses:
        200:
          $ref: "#/components/responses/NullResult"
  /buffersoc/{soc}:
    post:
      summary: Set battery buffer soc
      description: "[See documentation](/en/docs/reference/configuration/site#buffersoc)"
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /bufferstartsoc/{soc}:
    post:
      summary: Set battery buffer start soc
      description: "[See documentation](/en/docs/reference/configuration/site#bufferstartsoc)"
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /prioritysoc/{soc}:
    post:
      summary: Set battery priority soc
      description: "[See documentation](/en/docs/reference/configuration/site#prioritysoc)"
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /residualpower/{power}:
    post:
      summary: Set grid residual power
      description: "[See documentation](/en/docs/reference/configuration/site#residualpower)"
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/power"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /smartcostlimit/{cost}:
    post:
      summary: Set smart charging cost limit for all loadpoints
      description: "@naltatis"
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/costLimit"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /smartcostlimit:
    delete:
      summary: Remove smart charging cost limit for all loadpoints
      description: "@naltatis"
      tags:
        - Site
      responses:
        200:
          $ref: "#/components/responses/NullResult"
  /tariff/{type}:
    get:
      summary: Get list of tariff prices
      description: "@naltatis"
      tags:
        - Site
      parameters:
        - name: type
          in: path
          description: "@naltatis"
          required: true
          schema:
            type: string
            # enum ?
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      rates:
                        $ref: "#/components/schemas/Rates"
  /sessions:
    get:
      summary: Get charging sessions
      description: "[See documentation](/en/docs/features/sessions)"
      tags:
        - Site
      parameters:
        - name: year
          in: query
          description: Filter for the year
          schema:
            type: integer
            example: 2025
        - name: month
          in: query
          description: |
            Filter for the month:
            1: January
            2: February
            3: March
            4: April
            5: May
            6: June
            7: July
            8: August
            9: September
            10: October
            11: November
            12: December
          schema:
            type: string
            example: 2
            minimum: 1
            maximum: 12
        - name: format
          in: query
          description: File type
          schema:
            type: string
            enum:
              - csv
            # TODO: document csv response
        - name: lang
          in: query
          description: "@naltatis"
          schema:
            type: string
      responses:
        200:
          $ref: "#/components/responses/ChargingSessionsResult"
  /session/{id}:
    parameters:
      - $ref: "#/components/parameters/id"
    put:
      summary: Update vehicle of charging session
      description: "[See documentation](/en/docs/features/sessions)"
      tags:
        - Site
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vehicle:
                  $ref: "#/components/schemas/VehicleName"
      responses:
        200:
          description: Success ðŸ¥³
    delete:
      summary: Delete charging session
      description: "[See documentation](/en/docs/features/sessions)"
      tags:
        - Site
      responses:
        200:
          $ref: "#/components/responses/NullResult"
  /settings/telemetry:
    get:
      summary: Get telemetry status
      description: "[See documentation](/en/docs/reference/configuration/telemetry)"
      tags:
        - Site
      responses:
        200:
          $ref: "#/components/responses/BooleanResult"
  /settings/telemetry/{enable}:
    post:
      summary: Enable/disable telemetry
      description: "[See documentation](/en/docs/reference/configuration/telemetry)"
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/enable"
      responses:
        200:
          $ref: "#/components/responses/BooleanResult"
        400:
          description: Sponsorship required â›”
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - telemetry requires sponsorship
  #   _______               _____ _        _
  #  |__   __|         _   / ____| |      | |
  #     | | __ _  __ _(_) | (___ | |_ __ _| |_ ___
  #     | |/ _` |/ _` |    \___ \| __/ _` | __/ _ \
  #     | | (_| | (_| |_   ____) | || (_| | ||  __/
  #     |_|\__,_|\__, (_) |_____/ \__\__,_|\__\___|
  #               __/ |
  #              |___/
  /state:
    get:
      summary: Get system state
      description: "@naltatis"
      tags:
        - State
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/State"
  #   _______             __      __  _     _      _
  #  |__   __|         _  \ \    / / | |   (_)    | |
  #     | | __ _  __ _(_)  \ \  / /__| |__  _  ___| | ___  ___
  #     | |/ _` |/ _` |     \ \/ / _ \ '_ \| |/ __| |/ _ \/ __|
  #     | | (_| | (_| |_     \  /  __/ | | | | (__| |  __/\__ \
  #     |_|\__,_|\__, (_)     \/ \___|_| |_|_|\___|_|\___||___/
  #               __/ |
  #              |___/
  /vehicles/{name}/minsoc/{soc}:
    post:
      summary: Set minimum soc
      description: "[See `minSoc`-documentation](/en/docs/reference/configuration/vehicles#onidentify)"
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/SocResult"
  /vehicles/{name}/limitsoc/{soc}:
    post:
      summary: Set soc-limit
      description: "[See `targetSoc`-documentation](/en/docs/reference/configuration/vehicles#onidentify)"
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/SocResult"
  /vehicles/{name}/plan/soc/{soc}/{timestamp}:
    post:
      summary: Set static soc-plan
      description: "[See documentation](/en/docs/features/plans#create-charging-plan)"
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
        - $ref: "#/components/parameters/soc"
        - $ref: "#/components/parameters/timestamp"
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/StaticSocPlan"
  /vehicles/{name}/plan/soc:
    delete:
      summary: Delete static soc-plan
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
      responses:
        200:
          $ref: "#/components/responses/EmptyResult"
  /vehicles/{name}/plan/repeating:
    post:
      summary: Set repeating plans
      description: "[See documentation](/en/docs/features/plans#repeating-plans)"
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepeatingPlans"
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/RepeatingPlans"
  #   _______              _                     _             _       _
  #  |__   __|         _  | |                   | |           (_)     | |
  #     | | __ _  __ _(_) | |     ___   __ _  __| |_ __   ___  _ _ __ | |_ ___
  #     | |/ _` |/ _` |   | |    / _ \ / _` |/ _` | '_ \ / _ \| | '_ \| __/ __|
  #     | | (_| | (_| |_  | |___| (_) | (_| | (_| | |_) | (_) | | | | | |_\__ \
  #     |_|\__,_|\__, (_) |______\___/ \__,_|\__,_| .__/ \___/|_|_| |_|\__|___/
  #               __/ |                           | |
  #              |___/                            |_|
  /loadpoints/{id}/mode/{mode}:
    post:
      summary: Set charge mode
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#mode)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/mode"
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/Mode"
  /loadpoints/{id}/limitsoc/{soc}:
    post:
      summary: Limit soc
      description: "@naltatis"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/limitenergy/{power}:
    post:
      summary: Limit energy
      description: "@naltatis"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/power"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/mincurrent/{current}:
    post:
      summary: Set minimum current
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#mincurrent)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/current"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/maxcurrent/{current}:
    post:
      summary: Set maximum current
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#maxcurrent)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/current"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/phases/{phases}:
    post:
      summary: Set allowed phases
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#phases)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - name: phases
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Phases"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
        400:
          description:
            Invalid phases-value. â›” You have most likely entered the value 0 for a
            wallbox that cannot switch phases automatically.
            Take a look at the [documentation](/en/docs/reference/configuration/loadpoints#phases).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - "invalid number of phases: 0"
  /loadpoints/{id}/plan:
    get:
      summary: Get plan rates
      description: "@naltatis"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    allOf:
                      - type: object
                        properties:
                          planId:
                            $ref: "#/components/schemas/Id"
                      - $ref: "#/components/schemas/PlanRates"
  /loadpoints/{id}/plan/static/preview/{type}/{goal}/{timestamp}:
    get:
      summary: Get static plan preview
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - soc
              - energy
        - name: goal
          in: path
          description: The power or soc to reach.
          required: true
          examples:
            socAvailable:
              value: 80
              summary: If SoC is available => specify SoC in %
            socNotAvailable:
              value: 2500
              summary: If SoC is not available => specify power in Watt
          schema:
            oneOf:
              - $ref: "#/components/parameters/soc"
              - $ref: "#/components/parameters/power"
        - $ref: "#/components/parameters/timestamp"
      responses:
        200:
          $ref: "#/components/responses/PlanRatesResult"
  ? /loadpoints/{id}/plan/repeating/preview/{soc}/{weekdays}/{hourMinuteTime}/{timezone}
  : get:
      summary: Get repeating plan preview
      description: "@naltatis"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/soc"
        - name: weekdays
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Weekdays"
        - name: hourMinuteTime
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/HourMinuteTime"
        - name: timezone
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/IANATimeZone"
      responses:
        200:
          $ref: "#/components/responses/PlanRatesResult"
  /loadpoints/{id}/plan/energy/{power}/{timestamp}:
    post:
      summary: Create static energy-plan
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/power"
        - $ref: "#/components/parameters/timestamp"
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/StaticEnergyPlan"
  /loadpoints/{id}/plan/energy:
    delete:
      summary: Delete static energy-plan
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          $ref: "#/components/responses/EmptyResult"
  /loadpoints/{id}/vehicle/{name}:
    post:
      summary: Assign vehicle
      description: "[See documentation](/en/docs/features/vehicle#assignment-via-the-ui)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/vehicleName"
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      vehicle:
                        $ref: "#/components/schemas/VehicleTitle"
  /loadpoints/{id}/vehicle:
    parameters:
      - $ref: "#/components/parameters/id"
    delete:
      summary: Delete vehicle
      tags:
        - Loadpoints
      responses:
        200:
          $ref: "#/components/responses/EmptyResult"
    patch:
      summary: Start vehicle detection
      description: "[See documentation](/en/docs/features/vehicle#automatic-detection)"
      tags:
        - Loadpoints
      responses:
        200:
          $ref: "#/components/responses/EmptyResult"
  /loadpoints/{id}/remotedemand/{demand}/{source}:
    post:
      summary: "@naltatis"
      description: "@naltatis"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - name: demand
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Demand"
        - name: source
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Source"
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      demand:
                        $ref: "#/components/schemas/Demand"
                      source:
                        $ref: "#/components/schemas/Source"
  /loadpoints/{id}/enable/threshold/{threshold}:
    post:
      summary: Enable threshold
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#threshold)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/enableThreshold"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/enable/delay/{delay}:
    post:
      summary: Enable threshold-delay
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#delay)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/enableDelay"
      responses:
        200:
          $ref: "#/components/responses/NanoSecondsResult"
  /loadpoints/{id}/disable/threshold/{threshold}:
    post:
      summary: Disable threshold
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#threshold-1)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/disableThreshold"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/disable/delay/{delay}:
    post:
      summary: Disable threshold-delay
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#delay-1)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/disableDelay"
      responses:
        200:
          $ref: "#/components/responses/NanoSecondsResult"
  /loadpoints/{id}/smartcostlimit/{cost}:
    post:
      summary: Set smart charging cost limit
      description: "@naltatis"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/costLimit"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/smartcostlimit:
    delete:
      summary: Remove smart charging cost limit
      description: "@naltatis"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          $ref: "#/components/responses/NullResult"
  /loadpoints/{id}/priority/{priority}:
    post:
      summary: Set priority
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#priority)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - name: priority
          in: path
          description: "[See documentation](/en/docs/reference/configuration/loadpoints#priority)"
          required: true
          example: 2
          schema:
            type: integer
            minimum: 0
      responses:
        200:
          $ref: "#/components/responses/IntegerResult"
  /loadpoints/{id}/batteryboost/{enable}:
    post:
      summary: Set battery boost
      description: "[See documentation](/en/docs/features/battery#battery-boost)"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/enable"
      responses:
        200:
          $ref: "#/components/responses/BooleanResult"
  #   _______                            _   _
  #  |__   __|         _      /\        | | | |
  #     | | __ _  __ _(_)    /  \  _   _| |_| |__
  #     | |/ _` |/ _` |     / /\ \| | | | __| '_ \
  #     | | (_| | (_| |_   / ____ \ |_| | |_| | | |
  #     |_|\__,_|\__, (_) /_/    \_\__,_|\__|_| |_|
  #               __/ |
  #              |___/
  /auth/password:
    put:
      summary: Change admin password
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassword"
      responses:
        202:
          description: Success ðŸ¥³
        400:
          description: Invalid password provided â›”
          content:
            text/plain:
              schema:
                type: string
  /auth/status:
    get:
      summary: Get authentication status
      description: Whether the current user is logged in.
      tags:
        - Auth
      responses:
        200:
          description: Success ðŸ¥³
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - "true"
                  - "false"
  /auth/login:
    post:
      summary: Login
      description: Creates the authorization cookie
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  $ref: "#/components/schemas/Password"
      responses:
        200:
          description: Success ðŸ¥³
          headers:
            Set-Cookie:
              description: The authorization cookie
              schema:
                type: string
                example: auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0Mzc3NzMzN30.b6IjIUPgPq3OL33bB_CsVmbW_2qAy2wgOnGRB0IotqY; Path=/; Expires=Fri, 04 Apr 2025 14:35:37 GMT; HttpOnly; SameSite=Strict
        401:
          description: Invalid password provided â›”
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - Invalid password
  /auth/logout:
    post:
      summary: Logout
      description: Deletes the authorization cookie
      tags:
        - Auth
      responses:
        200:
          description: Success ðŸ¥³
          headers:
            Set-Cookie:
              description: The authorization cookie
              schema:
                type: string
                enum:
                  - auth=; Path=/; HttpOnly
  #   _______               _____             __ _
  #  |__   __|         _   / ____|           / _(_)
  #     | | __ _  __ _(_) | |     ___  _ __ | |_ _  __ _
  #     | |/ _` |/ _` |   | |    / _ \| '_ \|  _| |/ _` |
  #     | | (_| | (_| |_  | |___| (_) | | | | | | | (_| |
  #     |_|\__,_|\__, (_)  \_____\___/|_| |_|_| |_|\__, |
  #               __/ |                             __/ |
  #              |___/                             |___/
  /config/site:
    get:
      summary: "@naltatis"
      description: "@naltatis"
      tags:
        - Config
      responses:
        200:
          $ref: "#/components/responses/SiteResult"
    put:
      summary: "@naltatis"
      description: "@naltatis"
      tags:
        - Config
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
      responses:
        200:
          $ref: "#/components/responses/SiteResult"
  #   _______               _____           _
  #  |__   __|         _   / ____|         | |
  #     | | __ _  __ _(_) | (___  _   _ ___| |_ ___ _ __ ___
  #     | |/ _` |/ _` |    \___ \| | | / __| __/ _ \ '_ ` _ \
  #     | | (_| | (_| |_   ____) | |_| \__ \ ||  __/ | | | | |
  #     |_|\__,_|\__, (_) |_____/ \__, |___/\__\___|_| |_| |_|
  #               __/ |            __/ |
  #              |___/            |___/
  /system/log:
    get:
      summary: Get logs
      description: "@naltatis"
      security:
        - cookieAuth: []
      tags:
        - System
      parameters:
        - name: area
          in: query
          explode: true
          schema:
            $ref: "#/components/schemas/LogAreas"
        - name: level
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/LogLevel"
        - name: count
          in: query
          description: Number of log lines to return
          example: 100
          schema:
            type: integer
        - name: format
          in: query
          description: File type
          schema:
            type: string
            enum:
              - txt
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: string
            attachment; filename="{NAME}.log":
              schema:
                description: Download txt-file
                type: string
                format: binary
        401:
          $ref: "#/components/responses/Unauthorized"
  /system/log/areas:
    get:
      summary: Get log areas
      security:
        - cookieAuth: []
      tags:
        - System
      responses:
        200:
          description: Success ðŸ¥³
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/LogAreas"
        401:
          $ref: "#/components/responses/Unauthorized"
  /system/shutdown:
    post:
      summary: Shutdown evcc
      description: "@naltatis"
      security:
        - cookieAuth: []
      tags:
        - System
      responses:
        204:
          $ref: "#/components/responses/BlankResponse"
        401:
          $ref: "#/components/responses/Unauthorized"
components:
  schemas:
    ChargingSessions:
      description: Charging sessions
      type: array
      items:
        type: object
        properties:
          id:
            $ref: "#/components/schemas/Id"
          created:
            $ref: "#/components/schemas/Timestamp"
          finished:
            $ref: "#/components/schemas/Timestamp"
          loadpoint:
            type: string
            description: "[See documentation](/en/docs/reference/configuration/loadpoints#title)"
          identifier:
            type: string
            description: "@naltatis"
          vehicle:
            $ref: "#/components/schemas/VehicleName"
          odometer:
            type: number
            nullable: true
            description: Current vehicle odometer reading in kilometers
          meterStart:
            type: number
            nullable: true
            description: "@naltatis"
          meterStop:
            type: number
            nullable: true
            description: "@naltatis"
          chargedEnergy:
            type: number
            description: In kWh
          chargeDuration:
            type: number
          solarPercentage:
            type: number
            description: Solar percentage of the session
          price:
            type: number
            description: Price of the charged energy of the session
          pricePerKWh:
            type: number
            description: Average price of energy per kWh of the session
          co2PerKWh:
            type: number
            description: Average CO2 emissions per kWh
    LogArea:
      description: "[See documentation](/en/docs/reference/configuration/log#levels)"
      type: string
    LogAreas:
      description: "[See documentation](/en/docs/reference/configuration/log#levels)"
      type: array
      example: ["lp-1", "site", "db"]
      items:
        $ref: "#/components/schemas/LogArea"
    LogLevel:
      description: "[See documentation](/en/docs/reference/configuration/log#log)"
      type: string
      example: DEBUG
      enum:
        - FATAL
        - ERROR
        - WARN
        - INFO
        - DEBUG
        - TRACE
    Password:
      description: Admin password
      type: string
      example: passWord1234!
    ChangePassword:
      type: object
      properties:
        current:
          $ref: "#/components/schemas/Password"
        new:
          $ref: "#/components/schemas/Password"
    Site:
      description: "[See documentation](/en/docs/reference/configuration/site#metersgrid)"
      type: object
      properties:
        title:
          description: "[See documentation](/en/docs/reference/configuration/site#title)"
          type: string
        grid:
          description: "[See documentation](/en/docs/reference/configuration/site#metersgrid)"
          type: string
        pv:
          description: "[See documentation](/en/docs/reference/configuration/site#meterspv)"
          type: array
          items:
            type: string
        battery:
          description: "[See documentation](/en/docs/reference/configuration/site#meters.battery)"
          type: array
          items:
            type: string
    Source:
      description: "@naltatis-BITTE-AUCH-EXAMPLE-ODER-AM-BESTEN-ENUM-ANGEBEN"
      type: string
      pattern: "[0-9a-zA-Z_-]+"
    Demand:
      description: "@naltatis"
      type: string
      enum:
        - " "
        - hard
        - soft
    Mode:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#mode)"
      type: string
      enum:
        - "off"
        - now
        - minpv
        - pv
    State:
      type: object
      # TODO: add properties or too much effort?
    Phases:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#phases)"
      type: integer
      enum:
        - 0
        - 1
        - 3
    Id:
      description: The ID. Starts with 1.
      type: integer
      example: 1
      minimum: 1
    EnableDelay:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#delay) - Unit is **seconds**"
      type: integer
      example: 60
    DisableDelay:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#delay-1) - Unit is **seconds**"
      type: integer
      example: 60
    Soc:
      description: Soc in %
      type: number
      example: 60
      minimum: 0
      maximum: 100
    Current:
      description: Electric current in Ampere
      type: number
      example: "@naltatis"
      minimum: 0
    Timestamp:
      description: Timestamp in RFC3339 format
      type: string
      format: date-time
      example: "2025-07-19T12:30:00.000Z"
    Power:
      description: Power in Watt
      type: number
      minimum: 0
      example: 2500
    EnableThreshold:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#threshold)"
      type: number
      example: 0
    DisableThreshold:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#threshold-1)"
      type: number
      example: 200
    StaticSocPlan:
      description: "[See documentation](/en/docs/features/plans#create-charging-plan)"
      type: object
      properties:
        soc:
          $ref: "#/components/schemas/Soc"
        time:
          $ref: "#/components/schemas/Timestamp"
    StaticEnergyPlan:
      description: "[See documentation](/en/docs/features/plans#energy-amount-plan)"
      type: object
      properties:
        energy:
          $ref: "#/components/schemas/Power"
        time:
          $ref: "#/components/schemas/Timestamp"
    Rate:
      type: object
      description: A charging interval
      properties:
        start:
          description: Start of charging interval
          $ref: "#/components/schemas/Timestamp"
        end:
          description: End of charging interval
          $ref: "#/components/schemas/Timestamp"
        price:
          description: Cost of charging interval
          type: number
          minimum: 0
    Rates:
      type: array
      items:
        $ref: "#/components/schemas/Rate"
    PlanRates:
      type: object
      properties:
        planTime:
          $ref: "#/components/schemas/Timestamp"
        duration:
          description: Charging length
          type: integer
          minimum: 0
        plan:
          $ref: "#/components/schemas/Rates"
        power:
          $ref: "#/components/schemas/Power"
    Weekdays:
      description: The Weekdays - [See documentation](/en/docs/features/plans#repeating-plans)
      type: array
      uniqueItems: true
      example: [1, 3, 4]
      items:
        description: |
          0: Sunday
          1: Monday
          2: Tuesday
          3: Wednesday
          4: Thursday
          5: Friday
          6: Saturday
        type: integer
        minimum: 0
        maximum: 6
    HourMinuteTime:
      description: Time in `HOURS:MINUTES` format
      type: string
      pattern: "[0-1][0-9]:[0-5][0-9]"
      format: "HH:MM"
      example: 12:30
    IANATimeZone:
      description: Timezone in IANA format - [See Wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)
      type: string
      example: "Europe/Berlin"
    VehicleName:
      description: "[See documentation](/en/docs/reference/configuration/vehicles#name)"
      type: string
      minLength: 1
      pattern: "[a-zA-Z0-9_.:-]+"
      example: "vehicle_1"
    VehicleTitle:
      description: "[See documentation](/en/docs/reference/configuration/vehicles#title)"
      type: string
      example: "blauer e-Golf"
    RepeatingPlan:
      description: "[See documentation](/en/docs/features/plans#repeating-plans)"
      type: object
      properties:
        weekdays:
          $ref: "#/components/schemas/Weekdays"
        time:
          $ref: "#/components/schemas/HourMinuteTime"
        tz:
          $ref: "#/components/schemas/IANATimeZone"
        soc:
          $ref: "#/components/schemas/Soc"
        active:
          description: Whether evcc should take the plan into account. `false` means that evcc ignores the plan.
          type: boolean
    RepeatingPlans:
      type: object
      properties:
        plans:
          type: array
          items:
            $ref: "#/components/schemas/RepeatingPlan"
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Id"
    disableDelay:
      name: delay
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/DisableDelay"
    enableDelay:
      name: delay
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/EnableDelay"
    mode:
      name: mode
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Mode"
    enable:
      name: enable
      in: path
      required: true
      schema:
        oneOf:
          - type: boolean
          - type: string
          - type: number
        enum: ["true", "false", 1, 0]
    soc:
      name: soc
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Soc"
    timestamp:
      name: timestamp
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Timestamp"
    vehicleName:
      name: name
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/VehicleName"
    costLimit:
      name: cost
      description: Cost limit for a kWh @naltatis-WHICH-CURRENCY?-PLEASE-ADD-EXAMPLE
      example: 
      in: path
      required: true
      schema:
        type: number
    current:
      name: current
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Current"
    power:
      name: power
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Power"
    enableThreshold:
      name: threshold
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/EnableThreshold"
    disableThreshold:
      name: threshold
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/DisableThreshold"
  responses:
    NanoSecondsResult:
      description: Success ðŸ¥³ - Number result - Unit is **nanoseconds**
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: integer
    NumberResult:
      description: Success ðŸ¥³ - Number result
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: number
    IntegerResult:
      description: Success ðŸ¥³ - Integer result
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: integer
    SocResult:
      description: Success ðŸ¥³ - Soc result
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  soc:
                    $ref: "#/components/schemas/Soc"
    PlanRatesResult:
      description: Success ðŸ¥³ - PlanRates result
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/PlanRates"
    BooleanResult:
      description: Success ðŸ¥³ - Boolean result
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: boolean
    SiteResult:
      description: Success ðŸ¥³ - Site result
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/Site"
    NullResult:
      description: Success ðŸ¥³ - Null result
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                description: Value is always null
                type: object
                nullable: true
    BlankResponse:
      description: Success ðŸ¥³ - Blank response
    EmptyResult:
      description: Success ðŸ¥³ - Empty result
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
    ChargingSessionsResult:
      description: Success ðŸ¥³
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/ChargingSessions"
    Unauthorized:
      description: Unauthorized â›” - Login and try again
      content:
        text/plain:
          schema:
            type: string
            enum: [Unauthorized]
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: auth
