# Website used to generate these Tag-Comments: http://patorjk.com/software/taag/#f=Big
openapi: "3.0.3"
info:
  title: "evcc REST-API"
  description: "TODO: Alle möglichen Responses, Enums, Datentypregeln, Authentifizierung, Configs (?) und Responseobjekte dokumentieren; Examples hinzufügen"
  version: latest
servers:
  - url: https://demo.evcc.io/api
  - url: http://192.168.178.69:7070/api
tags:
  - name: Auth
    description: TODO
  - name: State
    description: TODO
  - name: Site
    description: TODO
  - name: Loadpoints
    description: TODO
  - name: Vehicles
    description: TODO
  - name: Config
    description: TODO
  - name: System
    description: TODO
paths:
  #   _______               _____ _ _
  #  |__   __|         _   / ____(_) |
  #     | | __ _  __ _(_) | (___  _| |_ ___
  #     | |/ _` |/ _` |    \___ \| | __/ _ \
  #     | | (_| | (_| |_   ____) | | ||  __/
  #     |_|\__,_|\__, (_) |_____/|_|\__\___|
  #               __/ |
  #              |___/
  /health:
    get:
      summary: Health check
      description: TODO
      tags:
        - Site
      responses:
        200:
          description: TODO
          content:
            text/plain:
              schema:
                type: string
                enum: [OK]
  /batterydischargecontrol/{enable}:
    post:
      summary: Control battery-discharge
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/enable"
      responses:
        200:
          $ref: "#/components/responses/BooleanResult"
  /batterygridchargelimit/{cost}:
    post:
      summary: Set battery grid charge limit
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/costLimit"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /batterygridchargelimit:
    delete:
      summary: Remove battery grid charge limit
      description: TODO
      tags:
        - Site
      responses:
        200:
          description: "TODO"
  /buffersoc/{soc}:
    post:
      summary: Set battery buffer soc
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /bufferstartsoc/{soc}:
    post:
      summary: Set battery buffer start soc
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /prioritysoc/{soc}:
    post:
      summary: Set battery priority soc
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /residualpower/{power}:
    post:
      summary: Set grid residual power
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/power"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /smartcostlimit/{cost}:
    post:
      summary: Set smart charging cost limit for all loadpoints
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/costLimit"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /smartcostlimit:
    delete:
      summary: Remove smart charging cost limit for all loadpoints
      description: TODO
      tags:
        - Site
      responses:
        200:
          description: "TODO"
  /tariff/{type}:
    get:
      summary: Get list of tariff prices
      description: TODO
      tags:
        - Site
      parameters:
        - name: type
          in: path
          description: TODO
          required: true
          schema:
            type: string
            # enum ?
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    description: TODO
                    type: object
                    properties:
                      rates:
                        $ref: "#/components/schemas/Rates"

  /sessions:
    get:
      summary: Get charging sessions
      description: TODO
      tags:
        - Site
      parameters:
        - name: format
          in: query
          description: TODO
          required: false
          schema:
            type: string
        - name: lang
          in: query
          description: TODO
          required: false
          schema:
            type: string
      responses:
        200:
          description: TODO
  /session/{id}:
    parameters:
      - $ref: "#/components/parameters/id"
    put:
      summary: Update session
      description: TODO
      tags:
        - Site
      responses:
        200:
          description: TODO
    delete:
      summary: Delete session
      description: TODO
      tags:
        - Site
      responses:
        200:
          description: TODO
  /settings/telemetry:
    get:
      summary: Get telemetry status
      description: TODO
      tags:
        - Site
      responses:
        200:
          $ref: "#/components/responses/BooleanResult"
  /settings/telemetry/{enable}:
    post:
      summary: Enable/disable telemetry
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/enable"
      responses:
        200:
          $ref: "#/components/responses/BooleanResult"
  #   _______               _____ _        _
  #  |__   __|         _   / ____| |      | |
  #     | | __ _  __ _(_) | (___ | |_ __ _| |_ ___
  #     | |/ _` |/ _` |    \___ \| __/ _` | __/ _ \
  #     | | (_| | (_| |_   ____) | || (_| | ||  __/
  #     |_|\__,_|\__, (_) |_____/ \__\__,_|\__\___|
  #               __/ |
  #              |___/
  /state:
    get:
      summary: Get system state
      description: TODO
      tags:
        - State
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/State"
  #   _______             __      __  _     _      _
  #  |__   __|         _  \ \    / / | |   (_)    | |
  #     | | __ _  __ _(_)  \ \  / /__| |__  _  ___| | ___  ___
  #     | |/ _` |/ _` |     \ \/ / _ \ '_ \| |/ __| |/ _ \/ __|
  #     | | (_| | (_| |_     \  /  __/ | | | | (__| |  __/\__ \
  #     |_|\__,_|\__, (_)     \/ \___|_| |_|_|\___|_|\___||___/
  #               __/ |
  #              |___/
  /vehicles/{name}/minsoc/{soc}:
    post:
      summary: Set minimum soc
      description: TODO
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /vehicles/{name}/limitsoc/{soc}:
    post:
      summary: Set soc-limit
      description: TODO
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /vehicles/{name}/plan/soc/{soc}/{timestamp}:
    post:
      summary: Set static soc-plan
      description: TODO
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
        - $ref: "#/components/parameters/soc"
        - $ref: "#/components/parameters/timestamp"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/StaticSocPlan"
  /vehicles/{name}/plan/soc:
    delete:
      summary: Delete static soc-plan
      description: TODO
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
      responses:
        200:
          description: TODO
  /vehicles/{name}/plan/repeating:
    post:
      summary: Set repeating plans
      description: TODO
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RepeatingPlan"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      plans:
                        type: array
                        items:
                          $ref: "#/components/schemas/RepeatingPlan"
  #   _______              _                     _             _       _
  #  |__   __|         _  | |                   | |           (_)     | |
  #     | | __ _  __ _(_) | |     ___   __ _  __| |_ __   ___  _ _ __ | |_ ___
  #     | |/ _` |/ _` |   | |    / _ \ / _` |/ _` | '_ \ / _ \| | '_ \| __/ __|
  #     | | (_| | (_| |_  | |___| (_) | (_| | (_| | |_) | (_) | | | | | |_\__ \
  #     |_|\__,_|\__, (_) |______\___/ \__,_|\__,_| .__/ \___/|_|_| |_|\__|___/
  #               __/ |                           | |
  #              |___/                            |_|
  /loadpoints/{id}/mode/{mode}:
    post:
      summary: Set charge mode
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/mode"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/Mode"
  /loadpoints/{id}/limitsoc/{soc}:
    post:
      summary: Limit soc
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/limitenergy/{power}:
    post:
      summary: Limit energy
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/power"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/mincurrent/{current}:
    post:
      summary: Set minimum current
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/current"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/maxcurrent/{current}:
    post:
      summary: Set maximum current
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/current"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/phases/{phases}:
    post:
      summary: Set allowed phases
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - name: phases
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Phases"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/plan:
    get:
      summary: Get plan rates
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    allOf:
                      - $ref: "#/components/schemas/PlanRates"
                      - type: object
                        properties:
                          planId:
                            $ref: "#/components/schemas/Id"
  /loadpoints/{id}/plan/static/preview/{type}/{goal}/{timestamp}:
    get:
      summary: Get static plan preview
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - name: type
          in: path
          description: TODO
          required: true
          schema:
            type: string
            enum:
              - soc
              - energy
        - name: goal
          in: path
          description: TODO
          required: true
          schema:
            oneOf:
              - $ref: "#/components/parameters/soc"
              - $ref: "#/components/parameters/power"
        - $ref: "#/components/parameters/timestamp"
      responses:
        200:
          $ref: "#/components/responses/PlanRatesResult"
  ? /loadpoints/{id}/plan/repeating/preview/{soc}/{weekdays}/{hourMinuteTime}/{timezone}
  : get:
      summary: Get repeating plan preview
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/soc"
        - name: weekdays
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Weekdays"
        - name: hourMinuteTime
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/HourMinuteTime"
        - name: timezone
          in: path
          required: true
          description: TODO
          schema:
            $ref: "#/components/schemas/IANATimeZone"
      responses:
        200:
          $ref: "#/components/responses/PlanRatesResult"
  /loadpoints/{id}/plan/energy/{power}/{timestamp}:
    post:
      summary: Set static energy-plan
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/power"
        - $ref: "#/components/parameters/timestamp"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/StaticEnergyPlan"
  /loadpoints/{id}/plan/energy:
    delete:
      summary: Delete static energy-plan
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          $ref: "#/components/responses/EmptyResult"
  /loadpoints/{id}/vehicle/{name}:
    post:
      summary: Set vehicle
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/vehicleName"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      vehicle:
                        $ref: "#/components/schemas/VehicleName"
  /loadpoints/{id}/vehicle:
    parameters:
      - $ref: "#/components/parameters/id"
    delete:
      summary: Delete vehicle
      description: TODO
      tags:
        - Loadpoints
      responses:
        200:
          $ref: "#/components/responses/EmptyResult"
    patch:
      summary: Start vehicle detection
      description: TODO
      tags:
        - Loadpoints
      responses:
        200:
          $ref: "#/components/responses/EmptyResult"
  /loadpoints/{id}/remotedemand/{demand}/{source}:
    post:
      summary: "@naltatis"
      description: "@naltatis"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - name: demand
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Demand"
        - name: source
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Source"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      demand:
                        $ref: "#/components/schemas/Demand"
                      source:
                        $ref: "#/components/schemas/Source"
  /loadpoints/{id}/enable/threshold/{threshold}:
    post:
      summary: "@naltatis"
      description: "@naltatis"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/threshold"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/enable/delay/{delay}:
    post:
      summary: "@naltatis"
      description: "@naltatis"
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/enableDelay"
      responses:
        200:
          $ref: "#/components/responses/IntegerResult"
  /loadpoints/{id}/disble/threshold/{threshold}:
    post:
      summary: TODO
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/threshold"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/disable/delay/{delay}:
    post:
      summary: TODO
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/disableDelay"
      responses:
        200:
          $ref: "#/components/responses/IntegerResult"
  /loadpoints/{id}/smartcostlimit/{cost}:
    post:
      summary: Set smart charging cost limit
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/costLimit"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /loadpoints/{id}/smartcostlimit:
    delete:
      summary: Remove smart charging cost limit
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: "TODO"
  /loadpoints/{id}/priority/{priority}:
    post:
      summary: Set priority
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - name: priority
          in: path
          description: TODO
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        200:
          $ref: "#/components/responses/IntegerResult"
  /loadpoints/{id}/batteryboost/{enable}:
    post:
      summary: Set battery boost
      description: TODO
      tags:
        - Loadpoints
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/enable"
      responses:
        200:
          $ref: "#/components/responses/BooleanResult"
  #   _______                            _   _
  #  |__   __|         _      /\        | | | |
  #     | | __ _  __ _(_)    /  \  _   _| |_| |__
  #     | |/ _` |/ _` |     / /\ \| | | | __| '_ \
  #     | | (_| | (_| |_   / ____ \ |_| | |_| | | |
  #     |_|\__,_|\__, (_) /_/    \_\__,_|\__|_| |_|
  #               __/ |
  #              |___/
  /auth/password:
    put:
      summary: Change password
      description: TODO
      tags:
        - Auth
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassword"
      responses:
        201:
          description: TODO
        400:
          description: TODO
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - Invalid password
  /auth/status:
    get:
      summary: Get authentication status
      description: TODO
      tags:
        - Auth
      responses:
        400:
          description: TODO
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - "true"
                  - "false"
  /auth/login:
    post:
      summary: Login
      description: TODO
      tags:
        - Auth
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  $ref: "#/components/schemas/Password"
      responses:
        200:
          description: TODO
          headers:
            Set-Cookie:
              description: TODO
              schema:
                type: string
                example: auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTc0Mzc3NzMzN30.b6IjIUPgPq3OL33bB_CsVmbW_2qAy2wgOnGRB0IotqY; Path=/; Expires=Fri, 04 Apr 2025 14:35:37 GMT; HttpOnly; SameSite=Strict
        401:
          description: TODO
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - Invalid password
  /auth/logout:
    post:
      summary: Login
      description: TODO
      tags:
        - Auth
      responses:
        200:
          description: TODO
          headers:
            Set-Cookie:
              description: TODO
              schema:
                type: string
                enum:
                  - auth=; Path=/; HttpOnly
  #   _______               _____             __ _
  #  |__   __|         _   / ____|           / _(_)
  #     | | __ _  __ _(_) | |     ___  _ __ | |_ _  __ _
  #     | |/ _` |/ _` |   | |    / _ \| '_ \|  _| |/ _` |
  #     | | (_| | (_| |_  | |___| (_) | | | | | | | (_| |
  #     |_|\__,_|\__, (_)  \_____\___/|_| |_|_| |_|\__, |
  #               __/ |                             __/ |
  #              |___/                             |___/
  /config/site:
    get:
      summary: TODO
      description: TODO
      tags:
        - Config
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Site"
    put:
      summary: TODO
      description: TODO
      tags:
        - Config
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Site"
      responses:
        200:
          description: TODO
  #   _______               _____           _
  #  |__   __|         _   / ____|         | |
  #     | | __ _  __ _(_) | (___  _   _ ___| |_ ___ _ __ ___
  #     | |/ _` |/ _` |    \___ \| | | / __| __/ _ \ '_ ` _ \
  #     | | (_| | (_| |_   ____) | |_| \__ \ ||  __/ | | | | |
  #     |_|\__,_|\__, (_) |_____/ \__, |___/\__\___|_| |_| |_|
  #               __/ |            __/ |
  #              |___/            |___/
  /system/log:
    get:
      summary: Get logs
      description: TODO
      security:
        - cookieAuth: []
      tags:
        - System
      parameters:
        - name: area
          in: query
          explode: true
          schema:
            $ref: "#/components/schemas/LogAreas"
        - name: level
          in: query
          description: TODO
          required: true
          schema:
            description: TODO
            type: string
            enum:
              - FATAL
              - ERROR
              - WARN
              - INFO
              - DEBUG
              - TRACE
        - name: count
          in: query
          description: TODO
          schema:
            description: TODO
            type: integer
        - name: format
          in: query
          description: TODO
          schema:
            description: TODO
            type: string
            enum:
              - " "
              - txt
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      description: TODO
                      type: string
            attachment; filename="{NAME}.log":
              schema:
                description: TODO
                type: string
                format: binary
        401:
          $ref: "#/components/responses/Unauthorized"
  /system/log/areas:
    get:
      summary: Get log areas
      description: TODO
      security:
        - cookieAuth: []
      tags:
        - System
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/LogAreas"
        401:
          $ref: "#/components/responses/Unauthorized"
  /system/shutdown:
    get:
      summary: Shutdown evcc
      description: TODO
      security:
        - cookieAuth: []
      tags:
        - System
      responses:
        204:
          description: TODO
        401:
          $ref: "#/components/responses/Unauthorized"
components:
  schemas:
    LogArea:
      description: "[See documentation](/en/docs/reference/configuration/log#levels)"
      type: string
    LogAreas:
      type: array
      items:
        $ref: "#/components/schemas/LogArea"
    Password:
      description: Admin password
      type: string
    ChangePassword:
      type: object
      properties:
        current:
          $ref: "#/components/schemas/Password"
        now:
          $ref: "#/components/schemas/Password"
    Site:
      description: "[See documentation](/en/docs/reference/configuration/site#metersgrid)"
      type: object
      properties:
        title:
          description: "[See documentation](/en/docs/reference/configuration/site#title)"
          type: string
        grid:
          description: "[See documentation](/en/docs/reference/configuration/site#metersgrid)"
          type: string
        pv:
          description: "[See documentation](/en/docs/reference/configuration/site#meterspv)"
          type: array
          items:
            type: string
        battery:
          description: "[See documentation](/en/docs/reference/configuration/site#meters.battery)"
          type: array
          items:
            type: string
    Source:
      description: "@naltatis"
      type: string
      pattern: "[0-9a-zA-Z_-]+"
    Demand:
      description: TODO
      type: string
      enum:
        - " "
        - hard
        - soft
    Mode:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#mode)"
      type: string
      enum:
        - "off"
        - now
        - minpv
        - pv
    State:
      type: object
      # TODO: add properties
    Phases:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#phases)"
      type: integer
      enum:
        - 0
        - 1
        - 3
    Id:
      description: The ID. Starts with 1.
      type: integer
      minimum: 1
    EnableDelay:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#delay)"
      type: integer
    DisableDelay:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#delay)"
      type: integer
    Soc:
      description: Soc in %
      type: number
      minimum: 0
      maximum: 100
    Current:
      description: Electric current in Ampere
      type: number
      minimum: 0
    Timestamp:
      description: Timestamp in RFC3339 format
      type: string
      format: date-time
      example: "2025-07-19T12:30:00.000Z"
    Power:
      description: Power in Watt
      type: number
      minimum: 0
    Threshold:
      description: "[See documentation](/en/docs/reference/configuration/loadpoints#threshold)"
      type: number
    StaticSocPlan:
      description: "[See documentation](/en/docs/features/plans#create-charging-plan)"
      type: object
      properties:
        soc:
          $ref: "#/components/schemas/Soc"
        time:
          $ref: "#/components/schemas/Timestamp"
    StaticEnergyPlan:
      description: "[See documentation](/en/docs/features/plans#energy-amount-plan)"
      type: object
      properties:
        energy:
          $ref: "#/components/schemas/Power"
        time:
          $ref: "#/components/schemas/Timestamp"
    Rate:
      type: object
      description: TODO
      properties:
        start:
          $ref: "#/components/schemas/Timestamp"
        end:
          $ref: "#/components/schemas/Timestamp"
        price:
          description: TODO
          type: number
          minimum: 0
    Rates:
      type: array
      description: TODO
      items:
        $ref: "#/components/schemas/Rate"
    PlanRates:
      type: object
      properties:
        planTime:
          $ref: "#/components/schemas/Timestamp"
        duration:
          description: TODO
          type: integer
          minimum: 0
        plan:
          $ref: "#/components/schemas/Rates"
        power:
          $ref: "#/components/schemas/Power"
    Weekdays:
      description: The Weekdays - [See documentation](/en/docs/features/plans#repeating-plans)
      type: array
      uniqueItems: true
      items:
        description: |
          0: Sunday
          1: Monday
          2: Tuesday
          3: Wednesday
          4: Thursday
          5: Friday
          6: Saturday
        type: integer
        minimum: 0
        maximum: 6
    HourMinuteTime:
      description: Time in Hours:Minutes format
      type: string
      pattern: "[0-1][0-9]:[0-5][0-9]"
      format: "HH:MM"
      example: 12:30
    IANATimeZone:
      description: Timezone in IANA format - [See Wikipedia](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List)
      type: string
      example: "UTC"
    VehicleName:
      description: Name of the vehicle
      type: string
      minLength: 1
      pattern: "[a-zA-Z0-9_.:-]+"
    RepeatingPlan:
      description: "[Se documentation](/en/docs/features/plans#repeating-plans)"
      type: object
      properties:
        weekdays:
          $ref: "#/components/schemas/Weekdays"
        time:
          $ref: "#/components/schemas/HourMinuteTime"
        tz:
          $ref: "#/components/schemas/IANATimeZone"
        soc:
          $ref: "#/components/schemas/Soc"
        active:
          description: Whether evcc should take the plan into account. `false` means that evcc ignores the plan.
          type: boolean
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Id"
    disableDelay:
      name: delay
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/DisableDelay"
    enableDelay:
      name: delay
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/EnableDelay"
    mode:
      name: mode
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Mode"
    enable:
      name: enable
      in: path
      required: true
      schema:
        oneOf:
          - type: boolean
          - type: string
          - type: number
        enum: ["true", "false", 1, 0]
    soc:
      name: soc
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Soc"
    timestamp:
      name: timestamp
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Timestamp"
    vehicleName:
      name: name
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/VehicleName"
    costLimit:
      name: cost
      description: Cost limit for a kWh @naltatis-WHICH-CURRENCY?
      in: path
      required: true
      schema:
        type: number
    current:
      name: current
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Current"
    power:
      name: power
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Power"
    threshold:
      name: threshold
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Threshold"
  responses:
    NumberResult:
      description: Number result of your input
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: number
    IntegerResult:
      description: Integer result of your input
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: integer
    PlanRatesResult:
      description: PlanRates result
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: "#/components/schemas/PlanRates"
    BooleanResult:
      description: Boolean result of your input
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: boolean
    EmptyResult:
      description: Empty result
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
    Unauthorized:
      description: Unauthorized - Login and try again
      content:
        text/plain:
          schema:
            type: string
            enum: [Unauthorized]
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: auth
