template: tesla
product:
  identifier: tesla
  brand: Tesla
requirements: ["skiptest"]
description: |
  Tesla bietet eine offizielle, aber kostenpflichtige Fahrzeug-API an.
  Für private Nutzung kannst du dir einen [Tesla Developer Account](https://developer.tesla.com/) erstellen und erhältst ein monatliches API-Guthaben von 10 €.
  Das ist für die gängigen evcc-Anwendungsfälle in der Regel ausreichend.

  Die Anleitung von [myteslamate.com](https://www.myteslamate.com/tesla-api-application-registration/) erklärt den Prozess und generiert dir kostenfrei die für evcc benötigten Access- und Refresh-Token.
  Mit diesem Tokenpaar und deiner im Tesla Developer Account erstellten Client ID kann evcc direkt mit der Tesla API kommunizieren.
  Dein verbrauchtes Guthaben kannst du im Tesla Developer Dashboard einsehen.

  Für die Nutzung des Tesla Wall Connectors benötigst du einen öffentlichen Command-Proxy-Server.
  [myteslamate.com](https://app.myteslamate.com/) stellt diesen Dienst kostenpflichtig (nutzungsbasiert) zur Verfügung.
  Konfiguriere dafür bei myteslamate.com die Command-Berechtigungen und trage das Proxy-Token hier ein.
  Start-, Stopp- und Stromstärken-Kommandos werden über diesen Proxy an Tesla geschickt.

  Weitere Informationen und Alternativen findest du in [unserem Blogbeitrag](https://docs.evcc.io/blog/2025/01/20/tesla-api-update).

render:
  - default: |
      type: template
      template: tesla
      title: # Titel, Wird in der Benutzeroberfläche angezeigt (optional)
      capacity: 50 # Akkukapazität (kWh), optional
      clientId: # Kunden ID deiner [Tesla Developer App](https://developer.tesla.com/dashboard).
      accessToken: # von [myteslamate.com](https://app.myteslamate.com/).
      refreshToken: # von [myteslamate.com](https://app.myteslamate.com/).
      vin: W... # Fahrzeugidentifikationsnummer, Wenn mehrere Fahrzeuge eines Herstellers vorhanden sind (optional)
    advanced: |
      type: template
      template: tesla
      title: # Titel, Wird in der Benutzeroberfläche angezeigt (optional)
      capacity: 50 # Akkukapazität (kWh), optional
      clientId: # Kunden ID deiner [Tesla Developer App](https://developer.tesla.com/dashboard).
      accessToken: # von [myteslamate.com](https://app.myteslamate.com/).
      refreshToken: # von [myteslamate.com](https://app.myteslamate.com/).
      vin: W... # Fahrzeugidentifikationsnummer, Wenn mehrere Fahrzeuge eines Herstellers vorhanden sind (optional)
      icon: car # Icon, Wird in der Benutzeroberfläche angezeigt [car, bike, bus, moped, motorcycle, rocket, scooter, taxi, tractor, rickshaw, shuttle, van, airpurifier, battery, bulb, climate, coffeemaker, compute, cooking, cooler, desktop, device, dishwasher, dryer, floorlamp, generic, heater, heatexchange, heatpump, kettle, laundry, laundry2, machine, meter, microwave, pump, smartconsumer, tool, waterheater] (optional)
      phases: 3 # Maximale Phasenanzahl, Die maximale Anzahl der Phasen welche genutzt werden können (optional)
      mode: # Standardlademodus, wenn ein Fahrzeug angeschlossen ist, Möglich sind Off, Now, MinPV und PV, oder leer wenn keiner definiert werden soll (optional)
      minCurrent: 6 # Minimale Stromstärke (A), Definiert die minimale Stromstärke pro angeschlossener Phase mit welcher das Fahrzeug geladen werden soll (optional)
      maxCurrent: 16 # Maximale Stromstärke (A), Definiert die maximale Stromstärke pro angeschlossener Phase mit welcher das Fahrzeug geladen werden soll (optional)
      identifiers: # Identifikation, Kann meist erst später eingetragen werden, siehe: https://docs.evcc.io/docs/features/vehicle (optional)
      priority: # Priorität, Priorität des Ladepunktes oder Fahrzeugs in Relation zu anderen Ladepunkten oder Fahrzeugen für die Zuweisung von PV-Energie (optional)
      commandProxy: https://api.myteslamate.com # Bei Verwendung eines TWC3 (oder eines anderen 'dummen' Ladegeräts, das nicht steuerbar ist) kann evcc die Ladung direkt verwalten, indem es über einen Command Proxy mit dem Fahrzeug kommuniziert. Standardmäßig wird der [myteslamate.com](https://app.myteslamate.com/) Proxy verwendet. Mit diesem Parameter kannst du die Basis-URL ändern. Siehe zum Beispiel [TeslaBleHttpProxy](https://github.com/wimaha/TeslaBleHttpProxy) für einen Proxy, der Kommandos über Bluetooth sendet. (optional)
      proxyToken: # Token für den Command Proxy von [myteslamate.com](https://app.myteslamate.com/) (nutzungsbasiert). Stelle sicher, dass du den Virtual Key installiert hast und die Berechtigungen 'Ladung starten', 'Ladung stoppen' und 'Ladestrom setzen' erteilt hast. (optional)
      cache: 15m # Cache, Zeitintervall nach dem Daten erneut vom Fahrzeug abgefragt werden (optional)
params:
  - name: title
    example:
    default:
    choice: []
    unit:
    description: Titel
    help: Wird in der Benutzeroberfläche angezeigt
    advanced: false
    optional: true
  - name: capacity
    example: 50
    default:
    choice: []
    unit: kWh
    description: Akkukapazität
    help:
    advanced: false
    optional: true
  - name: clientId
    example:
    default:
    choice: []
    unit:
    description:
    help: Kunden ID deiner [Tesla Developer App](https://developer.tesla.com/dashboard).
    advanced: false
    optional: false
  - name: accessToken
    example:
    default:
    choice: []
    unit:
    description:
    help: von [myteslamate.com](https://app.myteslamate.com/).
    advanced: false
    optional: false
  - name: refreshToken
    example:
    default:
    choice: []
    unit:
    description:
    help: von [myteslamate.com](https://app.myteslamate.com/).
    advanced: false
    optional: false
  - name: vin
    example: W...
    default:
    choice: []
    unit:
    description: Fahrzeugidentifikationsnummer
    help: Wenn mehrere Fahrzeuge eines Herstellers vorhanden sind
    advanced: false
    optional: true
  - name: icon
    example:
    default: car
    choice: [car, bike, bus, moped, motorcycle, rocket, scooter, taxi, tractor, rickshaw, shuttle, van, airpurifier, battery, bulb, climate, coffeemaker, compute, cooking, cooler, desktop, device, dishwasher, dryer, floorlamp, generic, heater, heatexchange, heatpump, kettle, laundry, laundry2, machine, meter, microwave, pump, smartconsumer, tool, waterheater]
    unit:
    description: Icon
    help: Wird in der Benutzeroberfläche angezeigt
    advanced: true
    optional: true
  - name: phases
    example: 3
    default:
    choice: []
    unit:
    description: Maximale Phasenanzahl
    help: Die maximale Anzahl der Phasen welche genutzt werden können
    advanced: true
    optional: true
  - name: mode
    example:
    default:
    choice: []
    unit:
    description: Standardlademodus, wenn ein Fahrzeug angeschlossen ist
    help: Möglich sind Off, Now, MinPV und PV, oder leer wenn keiner definiert werden soll
    advanced: true
    optional: true
  - name: minCurrent
    example: 6
    default:
    choice: []
    unit: A
    description: Minimale Stromstärke
    help: Definiert die minimale Stromstärke pro angeschlossener Phase mit welcher das Fahrzeug geladen werden soll
    advanced: true
    optional: true
  - name: maxCurrent
    example: 16
    default:
    choice: []
    unit: A
    description: Maximale Stromstärke
    help: Definiert die maximale Stromstärke pro angeschlossener Phase mit welcher das Fahrzeug geladen werden soll
    advanced: true
    optional: true
  - name: identifiers
    example:
    default:
    choice: []
    unit:
    description: Identifikation
    help: 'Kann meist erst später eingetragen werden, siehe: https://docs.evcc.io/docs/features/vehicle'
    advanced: true
    optional: true
  - name: priority
    example:
    default:
    choice: []
    unit:
    description: Priorität
    help: Priorität des Ladepunktes oder Fahrzeugs in Relation zu anderen Ladepunkten oder Fahrzeugen für die Zuweisung von PV-Energie
    advanced: true
    optional: true
  - name: commandProxy
    example:
    default: https://api.myteslamate.com
    choice: []
    unit:
    description:
    help: Bei Verwendung eines TWC3 (oder eines anderen 'dummen' Ladegeräts, das nicht steuerbar ist) kann evcc die Ladung direkt verwalten, indem es über einen Command Proxy mit dem Fahrzeug kommuniziert. Standardmäßig wird der [myteslamate.com](https://app.myteslamate.com/) Proxy verwendet. Mit diesem Parameter kannst du die Basis-URL ändern. Siehe zum Beispiel [TeslaBleHttpProxy](https://github.com/wimaha/TeslaBleHttpProxy) für einen Proxy, der Kommandos über Bluetooth sendet.
    advanced: true
    optional: true
  - name: proxyToken
    example:
    default:
    choice: []
    unit:
    description:
    help: Token für den Command Proxy von [myteslamate.com](https://app.myteslamate.com/) (nutzungsbasiert). Stelle sicher, dass du den Virtual Key installiert hast und die Berechtigungen 'Ladung starten', 'Ladung stoppen' und 'Ladestrom setzen' erteilt hast.
    advanced: true
    optional: true
  - name: cache
    example: 5m
    default: 15m
    choice: []
    unit:
    description: Cache
    help: Zeitintervall nach dem Daten erneut vom Fahrzeug abgefragt werden
    advanced: true
    optional: true