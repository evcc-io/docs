# Website used to generate these Tag-Comments: http://patorjk.com/software/taag/#f=Big
openapi: "3.0.3"
info:
  title: "evcc REST-API"
  description: "TODO: Alle m√∂glichen Responses, Enums, Datentypregeln, Authentifizierung, Configs (?) und Responseobjekte dokumentieren"
  version: latest
servers:
  - url: https://demo.evcc.io/api
tags:
  - name: State
    description: TODO
  - name: Site
    description: TODO
  - name: Loadpoints
    description: TODO
  - name: Vehicles
    description: TODO
paths:
  #   _______               _____ _ _
  #  |__   __|         _   / ____(_) |
  #     | | __ _  __ _(_) | (___  _| |_ ___
  #     | |/ _` |/ _` |    \___ \| | __/ _ \
  #     | | (_| | (_| |_   ____) | | ||  __/
  #     |_|\__,_|\__, (_) |_____/|_|\__\___|
  #               __/ |
  #              |___/
  /health:
    get:
      summary: Health check
      description: TODO
      tags:
        - Site
      responses:
        200:
          description: TODO
          content:
            text/plan:
              schema:
                type: string
                enum: [OK]
  /batterydischargecontrol/{enable}:
    post:
      summary: Control battery-discharge
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/enable"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    description: TODO
                    type: boolean
  /batterygridchargelimit/{cost}:
    post:
      summary: Set battery grid charge limit
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/cost"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /batterygridchargelimit:
    delete:
      summary: Remove battery grid charge limit
      description: TODO
      tags:
        - Site
      responses:
        200:
          description: "TODO"
  /buffersoc/{soc}:
    post:
      summary: Set battery buffer soc
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /bufferstartsoc/{soc}:
    post:
      summary: Set battery buffer start soc
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /prioritysoc/{soc}:
    post:
      summary: Set battery priority soc
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /residualpower/{power}:
    post:
      summary: Set grid residual power
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/power"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /smartcostlimit/{cost}:
    post:
      summary: Set smart charging cost limit for all loadpoints
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/cost"
      responses:
        200:
          $ref: "#/components/responses/NumberResult"
  /smartcostlimit:
    delete:
      summary: Remove smart charging cost limit for all loadpoints
      description: TODO
      tags:
        - Site
      responses:
        200:
          description: "TODO"
  /tariff/{type}:
    get:
      summary: Get list of tariff prices
      description: TODO
      tags:
        - Site
      parameters:
        - name: type
          in: path
          description: TODO
          required: true
          schema:
            type: string
            # enum ?
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    description: TODO
                    type: object
                    properties:
                      rates:
                        description: TODO
                        type: array
                        items:
                          description: TODO
                          type: object
                          properties:
                            start:
                              $ref: "#/components/schemas/Timestamp"
                            end:
                              $ref: "#/components/schemas/Timestamp"
                            price:
                              description: TODO
                              type: number
                              minimum: 0
  /sessions:
    get:
      summary: Get charging sessions
      description: TODO
      tags:
        - Site
      parameters:
        - name: format
          in: query
          description: TODO
          required: false
          schema:
            type: string
        - name: lang
          in: query
          description: TODO
          required: false
          schema:
            type: string
      responses:
        200:
          description: TODO
  /session/{id}:
    parameters:
      - $ref: "#/components/parameters/id"
    put:
      summary: Update session
      description: TODO
      tags:
        - Site
      responses:
        200:
          description: TODO
    delete:
      summary: Delete session
      description: TODO
      tags:
        - Site
      responses:
        200:
          description: TODO
  /settings/telemetry:
    get:
      summary: Get telemetry status
      description: TODO
      tags:
        - Site
      responses:
        200:
          $ref: "#/components/responses/BooleanResult"
  /settings/telemetry/{enable}:
    post:
      summary: Enable/disable telemetry
      description: TODO
      tags:
        - Site
      parameters:
        - $ref: "#/components/parameters/enable"
      responses:
        200:
          $ref: "#/components/responses/BooleanResult"
  #   _______               _____ _        _
  #  |__   __|         _   / ____| |      | |
  #     | | __ _  __ _(_) | (___ | |_ __ _| |_ ___
  #     | |/ _` |/ _` |    \___ \| __/ _` | __/ _ \
  #     | | (_| | (_| |_   ____) | || (_| | ||  __/
  #     |_|\__,_|\__, (_) |_____/ \__\__,_|\__\___|
  #               __/ |
  #              |___/
  /state:
    get:
      summary: Get system state
      description: TODO
      tags:
        - State
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/State"
  #   _______             __      __  _     _      _
  #  |__   __|         _  \ \    / / | |   (_)    | |
  #     | | __ _  __ _(_)  \ \  / /__| |__  _  ___| | ___  ___
  #     | |/ _` |/ _` |     \ \/ / _ \ '_ \| |/ __| |/ _ \/ __|
  #     | | (_| | (_| |_     \  /  __/ | | | | (__| |  __/\__ \
  #     |_|\__,_|\__, (_)     \/ \___|_| |_|_|\___|_|\___||___/
  #               __/ |
  #              |___/
  /vehicles/{name}/minsoc/{soc}:
    post:
      summary: Set minimum soc
      description: TODO
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NumberResult"
  /vehicles/{name}/limitsoc/{soc}:
    post:
      summary: Set soc-limit
      description: TODO
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
        - $ref: "#/components/parameters/soc"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                $ref: "#/components/responses/NumberResult"
  /vehicles/{name}/plan/soc/{soc}/{timestamp}:
    post:
      summary: Set static plan
      description: TODO
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
        - $ref: "#/components/parameters/soc"
        - $ref: "#/components/parameters/timestamp"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StaticPlan"
  /vehicles/{name}/plan/soc:
    delete:
      summary: Delete static plan
      description: TODO
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
      responses:
        200:
          description: TODO
  /vehicles/{name}/plan/repeating:
    post:
      summary: Set repeating plans
      description: TODO
      tags:
        - Vehicles
      parameters:
        - $ref: "#/components/parameters/vehicleName"
      requestBody:
        description: TODO
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RepeatingPlan"
      responses:
        200:
          description: TODO
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RepeatingPlan"

#   _______              _                     _             _       _
#  |__   __|         _  | |                   | |           (_)     | |
#     | | __ _  __ _(_) | |     ___   __ _  __| |_ __   ___  _ _ __ | |_ ___
#     | |/ _` |/ _` |   | |    / _ \ / _` |/ _` | '_ \ / _ \| | '_ \| __/ __|
#     | | (_| | (_| |_  | |___| (_) | (_| | (_| | |_) | (_) | | | | | |_\__ \
#     |_|\__,_|\__, (_) |______\___/ \__,_|\__,_| .__/ \___/|_|_| |_|\__|___/
#               __/ |                           | |
#              |___/                            |_|

#   _______               _____             __ _
#  |__   __|         _   / ____|           / _(_)
#     | | __ _  __ _(_) | |     ___  _ __ | |_ _  __ _
#     | |/ _` |/ _` |   | |    / _ \| '_ \|  _| |/ _` |
#     | | (_| | (_| |_  | |___| (_) | | | | | | | (_| |
#     |_|\__,_|\__, (_)  \_____\___/|_| |_|_| |_|\__, |
#               __/ |                             __/ |
#              |___/                             |___/

components:
  schemas:
    State:
      type: object
      properties:
        result:
          description: TODO
          type: object
    Soc:
      description: Soc in %
      type: number
      minimum: 0
      maximum: 100
    Timestamp:
      description: Timestamp
      type: string
      format: date-time
    StaticPlan:
      description: TODO
      type: object
      properties:
        soc:
          $ref: "#/components/schemas/Soc"
        plan:
          $ref: "#/components/schemas/Timestamp"
    RepeatingPlan:
      description: TODO
      type: object
      properties:
        weekdays:
          description: TODO
          type: array
          items:
            description: TODO
            type: integer
            minimum: 0
            maximum: 6
        time:
          description: TODO
          type: string
          pattern: "[0-1][0-9]:[0-5][0-9]"
          format: "HH:MM"
        tz:
          description: Timezone in IANA format (TODO:Enum daf√ºr?)
          type: string
        soc:
          $ref: "#/components/schemas/Soc"
        active:
          description: TODO
          type: boolean
  parameters:
    id:
      name: id
      in: path
      description: The ID. Starts with 1.
      required: true
      schema:
        type: integer
        minimum: 1
    enable:
      name: enable
      in: path
      description: TODO
      required: true
      schema:
        oneOf:
          - type: boolean
          - type: string
          - type: number
        enum:
          ["true", "false", 1, 0, t, f, T, F, "TRUE", "FALSE", "True", "False"]
    soc:
      name: soc
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/Soc"
    timestamp:
      name: timestamp
      in: path
      description: Timestamp
      required: true
      schema:
        $ref: "#/components/schemas/Timestamp"
    vehicleName:
      name: name
      in: path
      description: Name of the vehicle
      required: true
      schema:
        type: string
        minLength: 1
        pattern: "[a-zA-Z0-9_.:-]+"
    cost:
      name: cost
      in: path
      description: TODO
      required: true
      schema:
        type: number
    power:
      name: power
      in: path
      description: Power in Watt
      required: true
      schema:
        type: number
        minimum: 0
  responses:
    NumberResult:
      description: TODO
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                description: TODO
                type: number
    BooleanResult:
      description: TODO
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                description: TODO
                type: boolean
