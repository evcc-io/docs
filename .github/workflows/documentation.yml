name: documentation

on:
  push:
    branches: [main]
  repository_dispatch:
    types: [evcc-config-updated]

jobs:
  update-evcc-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Update git subtree
        run: |
          git config --global user.email "bot@evcc.io"
          git config --global user.name "evcc-bot"
          git remote add -f evcc-config https://github.com/evcc-io/config.git
          git fetch evcc-config master
          git subtree pull --prefix evcc-config evcc-config master --squash
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
  checks:
    if: github.event_name != 'push'
    needs: update-evcc-config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Test Build
        run: |
          if [ -e yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
            npm ci
          else
            npm i
          fi
          npm run build
  gh-release:
    if: github.event_name != 'pull_request'
    needs: update-evcc-config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}
      - name: Release to GitHub Pages
        env:
          USE_SSH: true
          GIT_USER: git
        run: |
          git config --global user.email "bot@evcc.io"
          git config --global user.name "evcc-bot"
          if [ -e yarn.lock ]; then
            yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
            npm ci
          else
            npm i
          fi
          npm run deploy
